[project]
name = "interactvlm"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.10,<3.12"
dependencies = [
    "torch>=2.6.0",
    "torchvision>=0.21.0",
    "pytorch3d>=0.7.8",
    "smplx>=0.1.28",
    "packaging>=25.0",
    "sentencepiece>=0.2.1",
    "peft>=0.17.1",
    "einops>=0.8.1",
    "fastapi>=0.118.2",
    "gradio>=5.49.1",
    "markdown2>=2.5.4",
    "numpy>=2.2.6",
    "openai>=2.2.0",
    "opencv-python>=4.11.0.86",
    "pycocotools>=2.0.10",
    "ray>=2.49.2",
    "shortuuid>=1.0.13",
    "tqdm>=4.67.1",
    "requests>=2.32.5",
    "uvicorn>=0.37.0",
    "transformers==4.31.0",
    "scipy>=1.15.3",
    "bitsandbytes>=0.48.1",
    "tensorboard>=2.20.0",
    "scikit-learn>=1.7.2",
    "scikit-image>=0.25.2",
    "trimesh>=4.8.3",
    "torchshow>=0.5.2",
    "pillow-heif>=1.1.1",
    "timm>=1.0.20",
    "wandb>=0.22.2",
    "omegaconf>=2.3.0",
    "deepspeed>=0.18.0",
    "flash-attn>=2.8.3",
    "videoio",
    "tinytools",
]

[project.optional-dependencies]
cpu = ["torch==2.8.0", "pytorch3d==0.7.8+pt2.8.0cpu", "torchvision"]
cu124 = ["torch==2.6.0", "pytorch3d==0.7.8+pt2.6.0cu124", "torchvision"]
cu126 = ["torch==2.8.0", "pytorch3d==0.7.8+pt2.8.0cu126", "torchvision"]
cu128 = ["torch==2.8.0", "pytorch3d==0.7.8+pt2.8.0cu128", "torchvision"]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", extra = "cpu" },
    { index = "pytorch-cu124", extra = "cu124" },
    { index = "pytorch-cu126", extra = "cu126" },
    { index = "pytorch-cu128", extra = "cu128" },
]
torchvision = [
    { index = "pytorch-cpu", extra = "cpu" },
    { index = "pytorch-cu124", extra = "cu124" },
    { index = "pytorch-cu126", extra = "cu126" },
    { index = "pytorch-cu128", extra = "cu128" },
]
pytorch3d = { index = "pytorch3d-wheels" }
videoio = { git = "https://github.com/vguzov/videoio" }
tinytools = { git = "https://github.com/alex-bene/tinytools.git" }

[tool.uv.extra-build-dependencies]
flash-attn = [{ requirement = "torch", match-runtime = true }]
deepspeed = [{ requirement = "torch", match-runtime = true }]

[tool.uv.extra-build-variables]
# The FLASH_ATTENTION_SKIP_CUDA_BUILD environment variable ensures that flash-attn is installed from a compatible,
# pre-built wheel, rather than attempting to build it from source, which requires access to the CUDA development
# toolkit. If the CUDA toolkit is not available, the environment variable can be omitted, and flash-attn will be
# installed from a pre-built wheel if one is available for the current platform, Python version, and PyTorch version.
flash-attn = { FLASH_ATTENTION_SKIP_CUDA_BUILD = "TRUE" }
deepspeed = { DS_BUILD_FUSED_ADAM = "1" }

[tool.uv]
# no-build-isolation-package = ["diff-gaussian-rasterization", "diffoctreerast"]
conflicts = [
    [
        { extra = "cpu" },
        { extra = "cu124" },
        { extra = "cu126" },
        { extra = "cu128" },
    ],
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[[tool.uv.index]]
name = "pytorch3d-wheels"
url = "https://miropsota.github.io/torch_packages_builder"
explicit = true

[dependency-groups]
dev = ["icecream>=2.1.7", "notebook>=7.3.2", "rich>=14.1.0"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
